# ansible-role-traefik/tasks/main.yml
- name: Stop Docker Compose stack
  become: true
  community.docker.docker_compose_v2:
    project_src: /home/{{ bootstrap_admin_user }}/docker
    files:
      - docker-compose-udms.yml
    state: absent
  ignore_errors: yes
  tags: docker_compose

- name: Allow HTTP traffic through firewall
  become: true
  ufw:
    rule: allow
    port: '80'
    proto: tcp
  tags: firewall

- name: Allow HTTPS traffic through firewall
  become: true
  ufw:
    rule: allow
    port: '443'
    proto: tcp
  tags: firewall

- name: Create necessary directories with correct permissions
  become: true
  file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('0755') }}"
  loop:
    - { path: "/home/{{ bootstrap_admin_user }}/docker/secrets", mode: "0700" }
    - { path: "/home/{{ bootstrap_admin_user }}/docker/logs/udms", mode: "0755" }
    - { path: "/home/{{ bootstrap_admin_user }}/docker/logs/udms/traefik", mode: "0755" }
    - { path: "/home/{{ bootstrap_admin_user }}/docker/appdata/traefik3", mode: "0755" }
    - { path: "/home/{{ bootstrap_admin_user }}/docker/appdata/traefik3/acme", mode: "0755" }
    - { path: "/home/{{ bootstrap_admin_user }}/docker/appdata/traefik3/rules", mode: "0755" }
    - { path: "/home/{{ bootstrap_admin_user }}/docker/appdata/traefik3/rules/udms", mode: "0755" }
  tags:
    - directories
    - log_dirs
    - traefik_dirs
    - secrets_dir
    
- name: Ensure .env file exists with correct permissions and content
  become: true
  copy:
    content: |
      PUID={{ PUID }}
      PGID={{ PGID }}
      TZ={{ TZ }}
      USERDIR=/home/{{ bootstrap_admin_user }}
      DOCKERDIR=/home/{{ bootstrap_admin_user }}/docker
      DATADIR=/media/storage
      HOSTNAME={{ HOSTNAME }}
      DOMAINNAME_1={{ DOMAINNAME_1 }}
      LOCAL_IPS={{ LOCAL_IPS }}
      CLOUDFLARE_IPS={{ CLOUDFLARE_IPS }}
    dest: /home/{{ bootstrap_admin_user }}/docker/.env
    owner: root
    group: root
    mode: '0600'
  tags: env_file

#- name: Print loaded variables used for troubleshooting purposes
#  debug:
#    msg:
#      - "PUID: {{ PUID }}"
#      - "PGID: {{ PGID }}"
#      - "TZ: {{ TZ }}"
#      - "USERDIR: /home/{{ bootstrap_admin_user }}"
#      - "DOCKERDIR: /home/{{ bootstrap_admin_user }}/docker"
#      - "DATADIR: /media/storage"
#      - "HOSTNAME: {{ HOSTNAME }}"
#      - "DOMAINNAME_1: {{ DOMAINNAME_1 }}"
#      - "LOCAL_IPS: {{ LOCAL_IPS }}"
#      - "CLOUDFLARE_IPS: {{ CLOUDFLARE_IPS }}"

- name: Create Basic Auth credentials secret file with correct permissions
  become: true
  ansible.builtin.htpasswd:
    path: /home/{{ bootstrap_admin_user }}/docker/secrets/basic_auth_credentials
    name: "{{ http_username }}"
    password: "{{ http_password }}"
    owner: root
    group: root
    mode: '0644'
  tags: secrets_file

- name: Create Cloudflare DNS API token file
  become: true
  copy:
    content: "{{ cloudflare_dns_api_token }}"
    dest: /home/{{ bootstrap_admin_user }}/docker/secrets/cf_dns_api_token
    owner: root
    group: root
    mode: '0600'
  tags: secrets_file

- name: Check if acme.json file exists
  become: true
  stat:
    path: /home/{{ bootstrap_admin_user }}/docker/appdata/traefik3/acme/acme.json
  register: acme_file

- name: Clear acme.json file if reset_acme is true
  become: true
  copy:
    content: ""
    dest: /home/{{ bootstrap_admin_user }}/docker/appdata/traefik3/acme/acme.json
    owner: root
    group: root
    mode: '0600'
  when: acme_file.stat.exists and reset_acme
  tags: acme_file

- name: Create empty acme.json file if it doesn't exist
  become: true
  file:
    path: /home/{{ bootstrap_admin_user }}/docker/appdata/traefik3/acme/acme.json
    state: touch
    mode: '0600'
  when: not acme_file.stat.exists
  tags: acme_file

- name: Create empty traefik.log file
  become: true
  file:
    path: /home/{{ bootstrap_admin_user }}/docker/logs/udms/traefik/traefik.log
    state: touch
  tags: log_files

- name: Create empty access.log file
  become: true
  file:
    path: /home/{{ bootstrap_admin_user }}/docker/logs/udms/traefik/access.log
    state: touch
  tags: log_files

- name: Copy templates to target locations
  become: true
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ bootstrap_admin_user }}"
    group: "{{ bootstrap_admin_user }}"
    mode: '0644'
  loop:
    # Docker Compose UDM
    - { src: "docker-compose-udms.yml.j2", dest: "/home/{{ bootstrap_admin_user }}/docker/docker-compose-udms.yml" }
    
    # Socket Proxy
    - { src: "socket-proxy.yml.j2", dest: "/home/{{ bootstrap_admin_user }}/docker/compose/udms/socket-proxy.yml" }
    
    # Traefik
    - { src: "traefik.yml.j2", dest: "/home/{{ bootstrap_admin_user }}/docker/compose/udms/traefik.yml" }
    
    # TLS Options
    - { src: "tls-opts.yml.j2", dest: "/home/{{ bootstrap_admin_user }}/docker/appdata/traefik3/rules/udms/tls-opts.yml" }
    
    # Middlewares
    - { src: "middlewares-rate-limit.yml.j2", dest: "/home/{{ bootstrap_admin_user }}/docker/appdata/traefik3/rules/udms/middlewares-rate-limit.yml" }
    - { src: "middlewares-secure-headers.yml.j2", dest: "/home/{{ bootstrap_admin_user }}/docker/appdata/traefik3/rules/udms/middlewares-secure-headers.yml" }
    - { src: "middlewares-basic-auth.yml.j2", dest: "/home/{{ bootstrap_admin_user }}/docker/appdata/traefik3/rules/udms/middlewares-basic-auth.yml" }
    - { src: "middlewares-ip-whitelist.yml.j2", dest: "/home/{{ bootstrap_admin_user }}/docker/appdata/traefik3/rules/udms/middlewares-ip-whitelist.yml" }
    
    # Chains
    - { src: "chain-internal-auth.yml.j2", dest: "/home/{{ bootstrap_admin_user }}/docker/appdata/traefik3/rules/udms/chain-internal-auth.yml" }
    - { src: "chain-no-auth.yml.j2", dest: "/home/{{ bootstrap_admin_user }}/docker/appdata/traefik3/rules/udms/chain-no-auth.yml" }
    - { src: "chain-basic-auth.yml.j2", dest: "/home/{{ bootstrap_admin_user }}/docker/appdata/traefik3/rules/udms/chain-basic-auth.yml" }
  tags: compose_file